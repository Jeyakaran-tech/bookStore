 steps:
 # Run the unit test
 - name: golang:1.18
   entrypoint: /bin/bash
   args: 
    - -c
    - |
      go install github.com/onsi/ginkgo/v2/ginkgo
      go get github.com/onsi/gomega/...
      wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
      chmod +x cloud_sql_proxy
      ./cloud_sql_proxy -instances=bookstore-362511:australia-southeast2:bookstore=tcp:3306 &
      go test -v -race -timeout 1000s -covermode=atomic -coverpkg=./cloudsql -coverprofile=unit_test.raw.out ./cloudsql
 # Run the Integration/functional test
 - name: golang:1.18
   entrypoint: /bin/bash
   args: 
    - -c
    - |
      go test -v -race -timeout 1000s -covermode=atomic -coverpkg=./integrationtests -coverprofile=unit_test.raw.out ./integrationtests
   env:
    - 'INSTANCE_CONNECTION_NAME=bookstore-362511:australia-southeast2:bookstore'
    - 'DB_USER=user'
    - 'DB_PASS=testbooks'
    - 'DB_NAME=books'
 # Build the container image
 - name: 'gcr.io/cloud-builders/docker'
   args: ['build', '-t', 'gcr.io/$PROJECT_ID/bookstore:$COMMIT_SHA', '.']
 # Push the container image to Container Registry
 - name: 'gcr.io/cloud-builders/docker'
   args: ['push', 'gcr.io/$PROJECT_ID/bookstore:$COMMIT_SHA']
 # Deploy container image to Cloud Run
 - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
   entrypoint: gcloud
   args:
   - 'run'
   - 'deploy'
   - 'bookstore'
   - '--image'
   - 'gcr.io/$PROJECT_ID/bookstore:$COMMIT_SHA'
   - '--region'
   - 'australia-southeast2'
 images:
 - 'gcr.io/$PROJECT_ID/bookstore:$COMMIT_SHA'
 options:
   logging: CLOUD_LOGGING_ONLY